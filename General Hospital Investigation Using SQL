--code to determine top 10 account balances by ICD 9 Codes
SELECT admit_icd,
	SUM(total_account_balance) AS total_due
FROM general_hospital.accounts
WHERE primary_icd_procedure_cd IS NOT NULL
GROUP BY admit_icd
ORDER BY total_due DESC
LIMIT 10;

--Account balances per admit_icd 9 code
SELECT admit_icd,
	SUM(total_account_balance) OVER (PARTITION BY admit_icd) AS total_balance_per_icd
FROM general_hospital.accounts
WHERE admit_icd IS NOT NULL;

--Amount of patients readmitted to inpatient
SELECT department_name,
100 * COUNT(patient_readmission_flag)/ SUM(COUNT(*)) OVER() AS percent_readmit,
COUNT(*) AS number_of_readmits
FROM general_hospital.encounters
JOIN general_hospital.departments
USING(department_id)
WHERE patient_inpatient_readmission_flag = 'Yes'
GROUP BY department_name
ORDER BY percent_readmit DESC;

--Average Length of Stay By Department
WITH length_stay AS(
SELECT *,
patient_discharge_datetime - patient_admission_datetime AS los
FROM general_hospital.encounters
)
SELECT departments.department_name,
AVG(los) AS avg_los
FROM length_stay
JOIN general_hospital.departments departments
ON length_stay.department_id = departments.department_id
GROUP BY department_name

--Patient Demographics
SELECT gender,
	ethnicity,
	COUNT(*) AS total
FROM general_hospital.patients
WHERE primary_language NOT IN ('ENGLISH')
GROUP BY 1,2
ORDER BY total DESC;

--Profit Categories for Surgical 

SELECT surgeon_id,
	diagnosis_description,
CASE 
	WHEN total_profit < 0 THEN 'Hospital Loss'
	WHEN total_profit < 50000 THEN 'Small Profit'
	WHEN total_profit > 50000 THEN 'Large Profit'
	ELSE 'N/A'
END AS profit_descpription
FROM general_hospital.surgical_encounters
ORDER BY 3;

--Profit Case Count Surgical
SELECT 
COUNT(CASE WHEN total_profit < 0 THEN 1 END) AS cases_of_losses,
COUNT(CASE WHEN total_profit < 50000 THEN 1 END) AS cases_of_small_profit,
COUNT(CASE WHEN total_profit > 50000 THEN 1 END) AS cases_of_large_profit
FROM general_hospital.surgical_encounters;

--Total Profit by Month Surgical in 2016
SELECT EXTRACT(month from surgical_admission_date) AS month_2016,
	ROUND(SUM(total_profit)) AS total_profit_month
FROM general_hospital.surgical_encounters
WHERE EXTRACT(year from surgical_admission_date) = 2016
GROUP BY 1
ORDER BY 2 DESC;

--Profit Case Count Surgical
SELECT 
COUNT(CASE WHEN total_profit < 0 THEN 1 END) AS cases_of_losses,
COUNT(CASE WHEN total_profit < 50000 THEN 1 END) AS cases_of_small_profit,
COUNT(CASE WHEN total_profit > 50000 THEN 1 END) AS cases_of_large_profit
FROM general_hospital.surgical_encounters;

--People who are surgical patients
SELECT encounters.master_patient_id,
	SUM(total_cost),
	SUM(total_profit)
FROM general_hospital.surgical_encounters encounters
LEFT JOIN general_hospital.patients patients
ON encounters.master_patient_id = patients.master_patient_id
WHERE encounters.master_patient_id IN (
		SELECT master_patient_id
		FROM general_hospital.patients)
GROUP BY 1;

--Vitals for each patient per encounter
SELECT encounters.master_patient_id,
	encounters.patient_encounter_id,
	bp_systolic,
	bp_diastolic
FROM general_hospital.vitals vitals
JOIN general_hospital.encounters encounters
USING(patient_encounter_id)
LEFT JOIN general_hospital.patients patients
USING(master_patient_id)
ORDER BY 1
;
